# Curriculum AI - Complete AI-Powered Educational Content Generation System
# OpenStax textbook acquisition + AI curriculum generation with multi-provider support

# ============================================================================
# CORE DEPENDENCIES
# ============================================================================

# GetOpenBooks - Textbook Acquisition System
requests>=2.28.0          # HTTP requests for API calls and downloads
PyYAML>=6.0              # Configuration file parsing
beautifulsoup4>=4.12.0   # HTML/XML parsing for discovery and content processing
psutil>=5.9.0            # System monitoring and resource management

# AI Framework Core
langchain>=0.3.0         # LLM application framework
langchain-community>=0.3.0  # Community integrations for langchain
langgraph>=0.4.0         # Graph-based workflow orchestration
langchain-text-splitters>=0.3.0  # Text chunking and splitting

# AI Providers
openai>=1.0.0            # OpenAI API (GPT-4, GPT-3.5-turbo, embeddings)
langchain-anthropic>=0.3.0  # Anthropic Claude integration
anthropic>=0.54.0        # Direct Anthropic API client

# Vector Databases and Embeddings
qdrant-client>=1.7.0     # Vector database for semantic search
chromadb>=0.4.18         # Alternative vector database

# Web Interface and Visualization
streamlit>=1.32.0        # Interactive web admin panel
plotly>=5.15.0           # Interactive charts and visualizations
pandas>=2.0.0            # Data manipulation for analytics

# Graph Processing and Visualization
networkx>=3.2            # Graph algorithms for curriculum dependencies
matplotlib>=3.8.0        # Static plotting for curriculum graphs

# Document Processing
unstructured>=0.11.0     # Advanced document parsing
pdfplumber>=0.9.0        # PDF text extraction
PyPDF2>=3.0.1            # PDF manipulation

# Development and Monitoring
langsmith>=0.3.0         # LangChain debugging and monitoring
prefect>=2.14.0          # Workflow orchestration (optional)

# ============================================================================
# TESTING DEPENDENCIES
# ============================================================================

pytest>=7.4.0           # Modern unit testing framework
pytest-cov>=4.0.0       # Test coverage measurement
pytest-mock>=3.11.0     # Enhanced mocking for tests

# ============================================================================
# ENVIRONMENT VARIABLES
# ============================================================================

# Required for AI features:
# export OPENAI_API_KEY='sk-...'           # Required for embeddings and OpenAI models
# export ANTHROPIC_API_KEY='sk-ant-...'    # Optional for Claude models
# export XAI_API_KEY='xai-...'             # Optional for Grok models

# Optional for monitoring:
# export LANGSMITH_API_KEY='...'           # Optional for LangChain monitoring
# export LANGSMITH_TRACING=true            # Enable tracing

# ============================================================================
# INSTALLATION INSTRUCTIONS
# ============================================================================

# 1. System Dependencies:
#    macOS:     brew install git
#    Ubuntu:    sudo apt install git python3-dev
#    Windows:   Download Git from git-scm.com

# 2. Python Environment:
#    python -m venv venv
#    source venv/bin/activate  # Windows: venv\Scripts\activate
#    pip install --upgrade pip setuptools wheel

# 3. Install Dependencies:
#    pip install -r requirements.txt

# 4. Set API Keys:
#    export OPENAI_API_KEY='your-openai-key'
#    export ANTHROPIC_API_KEY='your-anthropic-key'  # Optional
#    export XAI_API_KEY='your-xai-key'              # Optional

# 5. Quick Start:
#    python GetOpenBooks.py
#    python scripts/parse_textbooks.py
#    python scripts/embed_chunks.py
#    python scripts/generate_curriculum.py --provider anthropic
#    python scripts/generate_questions.py --provider openai
#    streamlit run ui/admin_app.py

# ============================================================================
# SYSTEM REQUIREMENTS
# ============================================================================

# Minimum:
# - Python 3.8+
# - 8 GB RAM
# - 50 GB disk space
# - Git 2.30+

# Recommended:
# - Python 3.11+
# - 16 GB RAM
# - SSD storage
# - Multi-core CPU
# - Stable internet

# Performance:
# - Parallel processing auto-scales to CPU cores
# - ~10-50 textbooks/minute processing speed
# - Memory scales with collection size
# - OpenAI API calls: ~$0.10-0.50 per curriculum
# - Anthropic API calls: ~$0.05-0.25 per curriculum

# ============================================================================
# FEATURES
# ============================================================================

# OpenStax Textbook Acquisition:
# ✅ 52+ verified repositories across 6 languages
# ✅ Automatic educational level classification
# ✅ Zero contamination protection
# ✅ 98% reading success rate

# AI Curriculum Generation:
# ✅ Multi-provider support (OpenAI, Anthropic, XAI)
# ✅ LangGraph workflows for complex AI pipelines
# ✅ ~1000 subtopics per discipline
# ✅ Prerequisite-aware curriculum graphs
# ✅ Bloom taxonomy question generation
# ✅ Interactive Streamlit admin interface

# Built-in Modules (no installation required):
# pathlib, hashlib, json, logging, xml.etree.ElementTree, re, sqlite3,
# collections, dataclasses, typing, datetime, time, subprocess, argparse,
# sys, os, shutil, tempfile, zipfile, base64, math, difflib, functools,
# threading, queue, asyncio, concurrent.futures, multiprocessing